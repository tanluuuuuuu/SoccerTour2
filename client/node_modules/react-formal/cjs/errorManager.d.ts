import { ValidationError } from 'yup';
import { Errors } from './types';
export interface ValidationPathSpec {
    path: string;
    shallow: boolean;
}
export declare let isValidationError: (err: any) => err is ValidationError;
export default function errorManager<TOptions>(handleValidation: (path: ValidationPathSpec, opts?: TOptions) => Error | void | Promise<Error | void>): {
    collect(paths: Array<ValidationPathSpec | string>, pristineErrors?: Errors, options?: TOptions | undefined): Promise<Errors>;
};
