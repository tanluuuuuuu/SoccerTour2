"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NestedForm", {
  enumerable: true,
  get: function () {
    return _NestedForm.default;
  }
});
Object.defineProperty(exports, "ValidateStrategies", {
  enumerable: true,
  get: function () {
    return _useField.ValidateStrategies;
  }
});
exports.formStatics = exports.default = void 0;
Object.defineProperty(exports, "getter", {
  enumerable: true,
  get: function () {
    return _Form.getter;
  }
});
exports.setDefaults = void 0;
Object.defineProperty(exports, "setter", {
  enumerable: true,
  get: function () {
    return _Form.setter;
  }
});
Object.defineProperty(exports, "splitFieldProps", {
  enumerable: true,
  get: function () {
    return _useField.splitFieldProps;
  }
});
exports.toFormErrors = void 0;
Object.defineProperty(exports, "useErrors", {
  enumerable: true,
  get: function () {
    return _useErrors.default;
  }
});
Object.defineProperty(exports, "useField", {
  enumerable: true,
  get: function () {
    return _useField.default;
  }
});
Object.defineProperty(exports, "useFieldArray", {
  enumerable: true,
  get: function () {
    return _useFieldArray.default;
  }
});
Object.defineProperty(exports, "useFormReset", {
  enumerable: true,
  get: function () {
    return _useFormReset.default;
  }
});
Object.defineProperty(exports, "useFormSubmit", {
  enumerable: true,
  get: function () {
    return _useFormSubmit.default;
  }
});
Object.defineProperty(exports, "useFormValues", {
  enumerable: true,
  get: function () {
    return _useFormValues.default;
  }
});
Object.defineProperty(exports, "useMergedEventHandlers", {
  enumerable: true,
  get: function () {
    return _Field.useMergedEventHandlers;
  }
});
Object.defineProperty(exports, "useTouched", {
  enumerable: true,
  get: function () {
    return _useTouched.default;
  }
});

var _Field = _interopRequireWildcard(require("./Field"));

var _FieldArray = _interopRequireDefault(require("./FieldArray"));

var _Form = _interopRequireWildcard(require("./Form"));

var _Submit = _interopRequireDefault(require("./Submit"));

var _Message = _interopRequireDefault(require("./Message"));

var _NestedForm = _interopRequireDefault(require("./NestedForm"));

var _Summary = _interopRequireDefault(require("./Summary"));

var _config = _interopRequireDefault(require("./config"));

var _useField = _interopRequireWildcard(require("./useField"));

var _useFormValues = _interopRequireDefault(require("./useFormValues"));

var _useFieldArray = _interopRequireDefault(require("./useFieldArray"));

var _errToJSON = _interopRequireDefault(require("./utils/errToJSON"));

var _useFormSubmit = _interopRequireDefault(require("./useFormSubmit"));

var _useErrors = _interopRequireDefault(require("./useErrors"));

var _useTouched = _interopRequireDefault(require("./useTouched"));

var _Reset = _interopRequireDefault(require("./Reset"));

var _useFormReset = _interopRequireDefault(require("./useFormReset"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const setDefaults = (defaults = {}) => {
  Object.assign(_config.default, defaults);
};

exports.setDefaults = setDefaults;

const toFormErrors = err => {
  if (!err || err.name !== 'ValidationError') throw new Error('`toErrors()` only works with ValidationErrors.');
  return (0, _errToJSON.default)(err);
};

exports.toFormErrors = toFormErrors;
const formStatics = {
  Field: _Field.default,
  FieldArray: _FieldArray.default,
  Message: _Message.default,
  Submit: _Submit.default,
  Reset: _Reset.default,
  Summary: _Summary.default
};
exports.formStatics = formStatics;

var _default = Object.assign(_Form.default, formStatics);

exports.default = _default;