import { Mapper } from './BindingContext';
export declare type MapToValue<TValue, TIn = any> = Mapper<TValue, TIn> | keyof TValue | {
    [P in keyof TValue]?: string | Mapper<TValue[P]>;
};
declare function useBinding<TValue, TIn = any>(bindTo: Mapper<TValue> | keyof TValue, mapValue?: MapToValue<TValue, TIn>): (TValue | ((...args: any[]) => void))[];
export default useBinding;
