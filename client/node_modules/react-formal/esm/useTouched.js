import { useMemo } from 'react';
import { BITS, useFormContext } from './Contexts';
import memoize from 'memoize-one';
import { filterAndMapErrors } from './Errors';

function useTouched(paths) {
  const {
    touched
  } = useFormContext(BITS.touched);
  const memoFilterAndMapErrors = useMemo(() => memoize(filterAndMapErrors, ([a], [b]) => a.errors === b.errors && a.names === b.names && a.mapErrors === b.mapErrors), []);
  return paths ? memoFilterAndMapErrors({
    errors: touched,
    names: paths
  }) : touched;
}

export default useTouched;