{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\SoccerTourForGroup2\\\\SoccerTour2\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRoute(props) {\n  _s();\n\n  // Modify this\n  const isLogin = useSelector(state => state.user.isLogin);\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: props.path,\n    render: () => isLogin ? props.children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 77\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProtectedRoute, \"V7IpLUtrqLYtw9//rv2ZOKp5hOA=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["D:/GitHub/SoccerTourForGroup2/SoccerTour2/client/src/components/ProtectedRoute.js"],"names":["React","Redirect","Route","useSelector","ProtectedRoute","props","isLogin","state","user","path","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B;AACA,QAAMC,OAAO,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,OAAvB,CAA3B;AAEA,sBACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAED,KAAK,CAACI,IAAnB;AAAyB,IAAA,MAAM,EAAE,MAAOH,OAAD,GAAYD,KAAK,CAACK,QAAlB,gBAA6B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AAApE;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAPQN,c;UAEWD,W;;;KAFXC,c;AAST,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction ProtectedRoute(props) {\r\n    // Modify this\r\n    const isLogin = useSelector((state) => state.user.isLogin);\r\n\r\n    return (\r\n        <Route path={props.path} render={() => (isLogin) ? props.children : <Redirect to={\"/\"}/>}/>\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"]},"metadata":{},"sourceType":"module"}