{"ast":null,"code":"import { FETCH_ALL_CALENDAR, UPDATE_CALENDAR, UPDATE_MATCH, UPDATE_MATCH_RESULT } from \"../constants/actionTypes.js\";\nexport default (function () {\n  let calendar = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type);\n\n  switch (action.type) {\n    case FETCH_ALL_CALENDAR:\n      return action.payload;\n\n    case UPDATE_CALENDAR:\n      return action.payload;\n\n    case UPDATE_MATCH:\n      if (calendar) {\n        for (let homeOrAway of [\"awayMatches\", \"homeMatches\"]) {\n          for (const round in calendar.calendar[homeOrAway]) {\n            for (const match in calendar.calendar[homeOrAway][round].matches) {\n              if (calendar.calendar[homeOrAway][round].matches[match]._id === action.payload._id) {\n                calendar.calendar[homeOrAway][round].matches[match] = action.payload;\n                console.log(\"Updated Data in reducer\");\n                return calendar;\n              }\n            }\n          }\n        }\n      }\n\n      return calendar;\n\n    case UPDATE_MATCH_RESULT:\n      console.log(\"Get in reducer\");\n      console.log(action.payload.id);\n\n      if (Object.keys(calendar).length !== 0) {\n        for (let homeOrAway of [\"awayMatches\", \"homeMatches\"]) {\n          for (const round in calendar.calendar[homeOrAway]) {\n            for (const match in calendar.calendar[homeOrAway][round].matches) {\n              if (calendar.calendar[homeOrAway][round].matches[match].result._id === action.payload._id) {\n                calendar.calendar[homeOrAway][round].matches[match].result = action.payload;\n                console.log(\"Updated result in reducer\");\n                return calendar;\n              }\n            }\n          }\n        }\n      }\n\n      return calendar;\n\n    default:\n      return calendar;\n  }\n});","map":{"version":3,"sources":["D:/00. Football Tour/client/src/reducers/calendar.js"],"names":["FETCH_ALL_CALENDAR","UPDATE_CALENDAR","UPDATE_MATCH","UPDATE_MATCH_RESULT","calendar","action","console","log","type","payload","homeOrAway","round","match","matches","_id","id","Object","keys","length","result"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,eAFJ,EAGIC,YAHJ,EAIIC,mBAJJ,QAKO,6BALP;AAOA,gBAAe,YAA2B;AAAA,MAA1BC,QAA0B,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AACA,UAAQH,MAAM,CAACG,IAAf;AACI,SAAKR,kBAAL;AACI,aAAOK,MAAM,CAACI,OAAd;;AACJ,SAAKR,eAAL;AACI,aAAOI,MAAM,CAACI,OAAd;;AACJ,SAAKP,YAAL;AACI,UAAIE,QAAJ,EAAc;AACV,aAAK,IAAIM,UAAT,IAAuB,CAAC,aAAD,EAAgB,aAAhB,CAAvB,EAAuD;AACnD,eAAK,MAAMC,KAAX,IAAoBP,QAAQ,CAACA,QAAT,CAAkBM,UAAlB,CAApB,EAAmD;AAC/C,iBAAK,MAAME,KAAX,IAAoBR,QAAQ,CAACA,QAAT,CAAkBM,UAAlB,EAA8BC,KAA9B,EACfE,OADL,EACc;AACV,kBACIT,QAAQ,CAACA,QAAT,CAAkBM,UAAlB,EAA8BC,KAA9B,EAAqCE,OAArC,CACID,KADJ,EAEEE,GAFF,KAEUT,MAAM,CAACI,OAAP,CAAeK,GAH7B,EAIE;AACEV,gBAAAA,QAAQ,CAACA,QAAT,CAAkBM,UAAlB,EAA8BC,KAA9B,EAAqCE,OAArC,CACID,KADJ,IAEIP,MAAM,CAACI,OAFX;AAGAH,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,uBAAOH,QAAP;AACH;AACJ;AACJ;AACJ;AACJ;;AACD,aAAOA,QAAP;;AACJ,SAAKD,mBAAL;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACI,OAAP,CAAeM,EAA3B;;AACA,UAAIC,MAAM,CAACC,IAAP,CAAYb,QAAZ,EAAsBc,MAAtB,KAAiC,CAArC,EAAwC;AACpC,aAAK,IAAIR,UAAT,IAAuB,CAAC,aAAD,EAAgB,aAAhB,CAAvB,EAAuD;AACnD,eAAK,MAAMC,KAAX,IAAoBP,QAAQ,CAACA,QAAT,CAAkBM,UAAlB,CAApB,EAAmD;AAC/C,iBAAK,MAAME,KAAX,IAAoBR,QAAQ,CAACA,QAAT,CAAkBM,UAAlB,EAA8BC,KAA9B,EACfE,OADL,EACc;AACV,kBACIT,QAAQ,CAACA,QAAT,CAAkBM,UAAlB,EAA8BC,KAA9B,EAAqCE,OAArC,CACID,KADJ,EAEEO,MAFF,CAESL,GAFT,KAEiBT,MAAM,CAACI,OAAP,CAAeK,GAHpC,EAIE;AACEV,gBAAAA,QAAQ,CAACA,QAAT,CAAkBM,UAAlB,EAA8BC,KAA9B,EAAqCE,OAArC,CACID,KADJ,EAEEO,MAFF,GAEWd,MAAM,CAACI,OAFlB;AAGAH,gBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,uBAAOH,QAAP;AACH;AACJ;AACJ;AACJ;AACJ;;AACD,aAAOA,QAAP;;AACJ;AACI,aAAOA,QAAP;AApDR;AAsDH,CAxDD","sourcesContent":["import {\r\n    FETCH_ALL_CALENDAR,\r\n    UPDATE_CALENDAR,\r\n    UPDATE_MATCH,\r\n    UPDATE_MATCH_RESULT,\r\n} from \"../constants/actionTypes.js\";\r\n\r\nexport default (calendar = {}, action) => {\r\n    console.log(action.type);\r\n    switch (action.type) {\r\n        case FETCH_ALL_CALENDAR:\r\n            return action.payload;\r\n        case UPDATE_CALENDAR:\r\n            return action.payload;\r\n        case UPDATE_MATCH:\r\n            if (calendar) {\r\n                for (let homeOrAway of [\"awayMatches\", \"homeMatches\"]) {\r\n                    for (const round in calendar.calendar[homeOrAway]) {\r\n                        for (const match in calendar.calendar[homeOrAway][round]\r\n                            .matches) {\r\n                            if (\r\n                                calendar.calendar[homeOrAway][round].matches[\r\n                                    match\r\n                                ]._id === action.payload._id\r\n                            ) {\r\n                                calendar.calendar[homeOrAway][round].matches[\r\n                                    match\r\n                                ] = action.payload;\r\n                                console.log(\"Updated Data in reducer\");\r\n                                return calendar;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return calendar;\r\n        case UPDATE_MATCH_RESULT:\r\n            console.log(\"Get in reducer\");\r\n            console.log(action.payload.id);\r\n            if (Object.keys(calendar).length !== 0) {\r\n                for (let homeOrAway of [\"awayMatches\", \"homeMatches\"]) {\r\n                    for (const round in calendar.calendar[homeOrAway]) {\r\n                        for (const match in calendar.calendar[homeOrAway][round]\r\n                            .matches) {\r\n                            if (\r\n                                calendar.calendar[homeOrAway][round].matches[\r\n                                    match\r\n                                ].result._id === action.payload._id\r\n                            ) {\r\n                                calendar.calendar[homeOrAway][round].matches[\r\n                                    match\r\n                                ].result = action.payload;\r\n                                console.log(\"Updated result in reducer\");\r\n                                return calendar;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return calendar;\r\n        default:\r\n            return calendar;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}