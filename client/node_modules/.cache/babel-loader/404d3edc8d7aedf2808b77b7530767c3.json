{"ast":null,"code":"import * as api from \"../api/index.js\";\nimport { FETCH_ALL_TOUR, UPDATE_CALENDAR, CREATE_TOUR, CREATE_TEAM, FETCH_RANKING_TEAM, FETCH_RANKING_PLAYER, SET_ER_MESSAGE, CLR_ER_MESSAGE, CHANGE_TOUR_RULE, ACCEPT_REGISTER, DELETE_REGISTER } from \"../constants/actionTypes.js\";\nexport const createTeam = _ref => {\n  let {\n    teamData,\n    userId\n  } = _ref;\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await api.createTeam(team);\n      console.log(`send dispatch ${CLR_ER_MESSAGE}`);\n      dispatch({\n        type: CLR_ER_MESSAGE,\n        payload: null\n      });\n      dispatch({\n        type: CREATE_TEAM,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: SET_ER_MESSAGE,\n        payload: error.response.data\n      });\n    }\n  };\n};\nexport const createTour = tourData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createTour(tourData);\n    dispatch({\n      type: CREATE_TOUR,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n};\nexport const fetchTour = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchTour();\n    dispatch({\n      type: FETCH_ALL_TOUR,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n};\nexport const updateCalendar = calendar => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateCalendar(calendar);\n    dispatch({\n      type: CLR_ER_MESSAGE,\n      payload: null\n    });\n    dispatch({\n      type: UPDATE_CALENDAR,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_ER_MESSAGE,\n      payload: error.response.data\n    });\n  }\n};\nexport const getRanking = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getRanking();\n    dispatch({\n      type: FETCH_RANKING_TEAM,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n};\nexport const getRankingPlayer = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getRankingPlayer();\n    dispatch({\n      type: FETCH_RANKING_PLAYER,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n};\nexport const changeTourRule = tourData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.changeTourRule(tourData);\n    dispatch({\n      type: CHANGE_TOUR_RULE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.response.data);\n  }\n};\nexport const acceptRegister = teamId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.acceptRegister({\n      teamId\n    });\n    dispatch({\n      type: ACCEPT_REGISTER,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.response.data);\n  }\n};\nexport const deleteRegister = teamId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteRegister({\n      teamId\n    });\n    dispatch({\n      type: DELETE_REGISTER,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.response.data);\n  }\n};","map":{"version":3,"sources":["D:/GitHub/SoccerTour/client/src/actions/tour.js"],"names":["api","FETCH_ALL_TOUR","UPDATE_CALENDAR","CREATE_TOUR","CREATE_TEAM","FETCH_RANKING_TEAM","FETCH_RANKING_PLAYER","SET_ER_MESSAGE","CLR_ER_MESSAGE","CHANGE_TOUR_RULE","ACCEPT_REGISTER","DELETE_REGISTER","createTeam","teamData","userId","dispatch","data","team","console","log","type","payload","error","response","createTour","tourData","message","fetchTour","updateCalendar","calendar","getRanking","getRankingPlayer","changeTourRule","acceptRegister","teamId","deleteRegister"],"mappings":"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","sourcesContent":["import * as api from \"../api/index.js\";\r\nimport {\r\n    FETCH_ALL_TOUR,\r\n    UPDATE_CALENDAR,\r\n    CREATE_TOUR,\r\n    CREATE_TEAM,\r\n    FETCH_RANKING_TEAM,\r\n    FETCH_RANKING_PLAYER,\r\n    SET_ER_MESSAGE,\r\n    CLR_ER_MESSAGE,\r\n    CHANGE_TOUR_RULE,\r\n    ACCEPT_REGISTER,\r\n    DELETE_REGISTER\r\n} from \"../constants/actionTypes.js\";\r\n\r\nexport const createTeam = ({teamData, userId}) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createTeam(team);\r\n\r\n        console.log(`send dispatch ${CLR_ER_MESSAGE}`);\r\n        dispatch({ type: CLR_ER_MESSAGE, payload: null });\r\n        dispatch({ type: CREATE_TEAM, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: SET_ER_MESSAGE, payload: error.response.data });\r\n    }\r\n};\r\n\r\nexport const createTour = (tourData) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createTour(tourData);\r\n\r\n        dispatch({ type: CREATE_TOUR, payload: data });\r\n    } catch (error) {\r\n        console.log(error.response.data.message);\r\n    }\r\n};\r\n\r\nexport const fetchTour = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchTour();\r\n\r\n        dispatch({ type: FETCH_ALL_TOUR, payload: data });\r\n    } catch (error) {\r\n        console.log(error.response.data.message);\r\n    }\r\n};\r\n\r\nexport const updateCalendar = (calendar) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateCalendar(calendar);\r\n\r\n        dispatch({ type: CLR_ER_MESSAGE, payload: null });\r\n        dispatch({ type: UPDATE_CALENDAR, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: SET_ER_MESSAGE, payload: error.response.data });\r\n    }\r\n};\r\n\r\nexport const getRanking = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.getRanking();\r\n\r\n        dispatch({ type: FETCH_RANKING_TEAM, payload: data });\r\n    } catch (error) {\r\n        console.log(error.response.data.message);\r\n    }\r\n};\r\n\r\nexport const getRankingPlayer = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.getRankingPlayer();\r\n\r\n        dispatch({ type: FETCH_RANKING_PLAYER, payload: data });\r\n    } catch (error) {\r\n        console.log(error.response.data.message);\r\n    }\r\n};\r\n\r\nexport const changeTourRule = (tourData) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.changeTourRule(tourData);\r\n\r\n        dispatch({ type: CHANGE_TOUR_RULE, payload: data });\r\n    } catch (error) {\r\n        console.log(error.response.data);\r\n    }\r\n};\r\n\r\nexport const acceptRegister = (teamId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.acceptRegister({teamId});\r\n\r\n        dispatch({ type: ACCEPT_REGISTER, payload: data });\r\n    } catch (error) {\r\n        console.log(error.response.data);\r\n    }\r\n}\r\n\r\nexport const deleteRegister = (teamId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.deleteRegister({teamId});\r\n\r\n        dispatch({ type: DELETE_REGISTER, payload: data });\r\n    } catch (error) {\r\n        console.log(error.response.data);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}